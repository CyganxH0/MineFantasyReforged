buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id "maven-publish"
    id "de.fuerstenau.buildconfig" version "1.1.8"
}

// We apply the 'forge' plugin, so ForgeGradle can do it's stuff.
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'

repositories {
    maven {
        mavenCentral()
        name "LatvianModder Ivy"
        url = "https://maven.latmod.com/"
    }
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "http://tehnut.info/maven"
    }
    maven {
        url 'http://minecraft.curseforge.com/api/maven/'
    }
    maven {
        url 'http://chickenbones.net/maven/'
    }
    flatDir {
        dirs 'libs'
    }
}

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = minecraft_version + "-" + forge_version
    mappings = mcp_mappings
    runDir = "run"
    replaceIn "MineFantasyReborn.java"
    replace "@VERSION@", "${project.minecraft.version}-${project.major}.${project.minor}.${project.patch}." + getBuildNumber() + getStable()

}
version = minecraft.version + "-" + project.major +"."+ project.minor +"."+ project.patch +"."+ getBuildNumber() + getStable()
group = "minefantasy.mfr.MineFantasyReborn" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MineFantasyReborn"

dependencies {
    //deobfCompile "mezz.jei:jei_${minecraft_version}:${jei_version}"
    deobfCompile "codechicken:CodeChickenLib:1.12.2-3.2.3.358:deobf"

}

buildConfig {
    appName = project.name       // sets value of NAME field
    version = project.version // sets value of VERSION field,

    clsName = 'BuildConfig'      // sets the name of the BuildConfig class
    packageName = 'minefantasy.mfr'  // sets the package of the BuildConfig class,
    charset = 'UTF-8'            // sets charset of the generated class,

    buildConfigField 'boolean', 'UNSTABLE', {isUnstable()}
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def getBuildNumber() {
    if (System.getenv("BUILD_NUMBER") != null) {
        return System.getenv("BUILD_NUMBER").toString()
    }
    return ""
}

def getStable() {
    if (isUnstable()) {
        return "unstable"
    }
    return ""
}

def isUnstable() {
    return (System.getenv("GITHUB_REF") == null || System.getenv("GITHUB_REF").endsWith("-dev"));
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/TeamMFR/MineFantasy-reborn"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

// TODO: check the deprecated warnings
// running a regular Build could possibly show them too
// disabled for now, this prints all deprecated warnings to the console so that we can get rid of them eventually
//allprojects {
//    tasks.withType(JavaCompile) {
//        options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
//    }
//}